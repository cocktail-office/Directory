package org.cocktail.directory.server.components;

// Generated by the WOLips Templateengine Plug-in at 16 fï¿½vr. 2007 10:17:43

import org.cocktail.directory.server.DirectAction;
import org.cocktail.directory.server.Session;
import org.cocktail.directory.tools.CLog;
import org.cocktail.fwkcktlwebapp.common.CktlUserInfo;
import org.cocktail.fwkcktlwebapp.common.database.CktlUserInfoDB;
import org.cocktail.fwkcktlwebapp.server.CktlWebApplication;

import com.webobjects.appserver.WOApplication;
import com.webobjects.appserver.WOComponent;
import com.webobjects.appserver.WOContext;
import com.webobjects.appserver.WORedirect;
import com.webobjects.appserver.WOResponse;

import er.ajax.CktlAjaxUtils;

public class LoginPage extends WOComponent {
	
	private CktlWebApplication app;
	
    public String login;
    public String password;
	
    public Session session;
    private CktlUserInfoDB userInfos;
    
    public boolean hasErrors = false;
    public String errorMessage;
    
    public LoginPage(WOContext context) {
        super(context);
        session = (Session)session();
        app = (CktlWebApplication)WOApplication.application();
        CLog.log("create LoginPage");
    }
    
    
	public void appendToResponse(WOResponse response, WOContext context) {

		super.appendToResponse(response, context);
		CktlAjaxUtils.addStylesheetResourceInHead(context, response, "app", "css/style.css");

	}
	
     public WOComponent logon() {
    	 if(login==null || password==null) {
    		 return null;
    	 }
    	 else {
    		 String rootPW = app.config().stringForKey("APP_ADMIN_PASSWORD");
    		 userInfos = new CktlUserInfoDB(app.dataBus());
    		 userInfos.setRootPass(rootPW);
    		 userInfos.compteForLogin(login,password,true);
    	        if(userInfos.errorCode()==CktlUserInfo.ERROR_NONE) {
    	        	session.setConnectedUser(login);
    	        	hasErrors = false;
    	        	return continuePreviousRequest();
    	        }
    	        else {
    	        	hasErrors = true;
    	        	errorMessage = userInfos.errorMessage();
    	        	CLog.log("hasErrors="+errorMessage);
    	        	return null;
    	        }
    	 }
     }
     
     private WOComponent continuePreviousRequest() {
    	 if(session.objectForKey(DirectAction.URL)!=null) {
             WORedirect page = (WORedirect)pageWithName(WORedirect.class.getName());
             page.setUrl((String)session.objectForKey(DirectAction.URL));
             return page;
         }
         else
        	 return null;
     }

}