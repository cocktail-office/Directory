package org.cocktail.directory.server.components;

// Generated by the WOLips Templateengine Plug-in at 12 fï¿½vr. 2007 10:19:53

import org.cocktail.directory.impl.pathways.Pathway;
import org.cocktail.directory.server.DirectAction;
import org.cocktail.directory.server.Session;
import org.cocktail.directory.tools.DirUtilities;

import com.webobjects.appserver.WOComponent;
import com.webobjects.appserver.WOContext;
import com.webobjects.appserver.WORedirect;
import com.webobjects.foundation.NSArray;
import com.webobjects.foundation.NSDictionary;



public class PathwaySearchResults extends WOComponent {
	
	private static final long serialVersionUID = -8069077237803094724L;

	public Pathway pathway;
	public NSDictionary searchArgs;
	public String typeRequestItem;
	
	private NSArray pathwayResults;
	public Session session;
	
    public PathwaySearchResults(WOContext context) {
        super(context);
        session = (Session)session();
    }

    
    public String pathwayTitle() {
    	StringBuffer bf = new StringBuffer();
    	bf.append( session.getLocalizedString(pathway.getLocalizationId()) );
    	processPathwayResults();
    	if(pathwayResults!=null) {
			bf.append(" : ");
			bf.append(pathwayResults.count());
    	}
    	return bf.toString();
    }
    
    
    public boolean canShowResults() {
    	boolean can = true;
    	if(pathway.needsAuthentication() && session.connectedUserInfo()==null)
    		can = false;
    	return can;
    }
    
    
    public WOComponent connect() {
    	
    	session.setObjectForKey( DirUtilities.unescapeHTML(session.getDirectoryRequest()) ,DirectAction.URL );
    	
    	String url = context().directActionURLForActionNamed("casLogin",null);
    	WORedirect redirect = new WORedirect(context());
    	redirect.setUrl(url);
    	return redirect;
    }
    
    public NSArray getPathwayResults() {
		NSArray local = null;
		if(pathwayResults!=null) {
			local = (NSArray)pathwayResults.clone();
			pathwayResults=null;
		}
		return local;
	}
	
	public void setPathwayResults(NSArray pathwayResults) {
		this.pathwayResults = pathwayResults;
	}
    
	public void processPathwayResults() {
		if(pathway!=null) {
			pathwayResults = pathway.processSimpleSearch(searchArgs, session.defaultEditingContext());
		}
	}
	
	public String theTypeRequestItem() {
		if(pathway.typeRequestSearchResult()!=null)
			return pathway.typeRequestSearchResult();
		else
			return typeRequestItem;
	}
	
}