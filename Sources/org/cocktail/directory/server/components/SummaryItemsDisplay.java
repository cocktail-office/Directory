package org.cocktail.directory.server.components;

// Generated by the WOLips Templateengine Plug-in at 18 dï¿½c. 2006 10:59:04

import org.cocktail.directory.impl.Directory;
import org.cocktail.directory.impl.elements.DirectoryEntity;
import org.cocktail.directory.impl.elements.FieldItem;
import org.cocktail.directory.impl.elements.LinkFieldItem;
import org.cocktail.directory.impl.pathways.Pathway;
import org.cocktail.directory.server.NavigationInfos;
import org.cocktail.directory.server.Session;
import org.cocktail.directory.tools.DirUtilities;

import com.webobjects.appserver.WOComponent;
import com.webobjects.appserver.WOContext;
import com.webobjects.appserver.WODisplayGroup;
import com.webobjects.foundation.NSArray;



public class SummaryItemsDisplay extends WOComponent {
	
	private static final String CSS_CLASS_ODD_ROW = "odd"; // ligne impaire
	private static final String CSS_CLASS_EVEN_ROW = "even"; //ligne paire
	
	// bindings
	public WODisplayGroup displayGroup;
	public String typeRequestItem = NavigationInfos.REQ_SPECIFIC_ITEM;
	public Directory directory;
	public Pathway pathway;
	public DirectoryEntity parentObject;
	public FieldItem currentFieldLevel,currentSubField;
	public String currentFieldLevelValue,currentSubFieldValue;
	public int level;
	
	public NSArray alternSummaryFieldsForMembers;
	
	public Session session;
	
    public SummaryItemsDisplay(WOContext context) {
        super(context);
        session = (Session)session();
    }
    
    public NSArray getSummaryFieldsForMembers() {
    	if(alternSummaryFieldsForMembers!=null && alternSummaryFieldsForMembers.count()>0) {
    		return alternSummaryFieldsForMembers;
    	}
    	else {
    		return pathway.summaryFieldsForMembers();
    	}
    }
    
    
    public boolean shouldLinkToDetails() {
    	return directory.areDetailsAvailable();
    }
    
    public boolean isSubFieldAMailTo() {
    	return (currentSubField instanceof LinkFieldItem) && 
    			(((LinkFieldItem)currentSubField).getLinkType()==LinkFieldItem.MAILTO_LINK);
    }
    
    public boolean isSubFieldSimpleString() {
    	return !currentSubField.isList() && !isSubFieldAMailTo();
    }
    
    public boolean hasFieldsForLevel() {
    	return pathway.hasFieldsForLevel(level);
    }
    
    public NSArray getFieldsForLevel() {
    	return pathway.getFieldsForLevel(level);
    }
    
    public String fieldLevelLabel() {
    	return session.getLocalizedString(currentFieldLevel.getLocalizationId());
    }
    
    public String subFieldLabel() {
    	return session.getLocalizedString(currentSubField.getLocalizationId());
    }
    
    // TODO : implementer
    public NSArray currentSubFieldValueAsList() {
    	Object result = DirUtilities.invokeMethod(
						parentObject,
						currentSubField.getId()
    	);
    	return (NSArray)result;
    }
    
    public String currentSubFieldSimpleValue() {
    	Object result = DirUtilities.invokeMethod(
    					parentObject,
    					currentSubField.getId()
		);
    	return (String)result;
    }
    
    public String currentFieldLevelValue() {
    	
    	Object result = DirUtilities.invokeMethod(
				parentObject,
				currentFieldLevel.getId()
    	);
    	return (String)result;

    }
    
    public NSArray getSummaryFields() {
    	return new NSArray();
    }
    
    
    
    // Gestion de la partie retractable.
    
    public String onClickString() {
    	return "toggleDivVisibility('itemdesc_id','bdesc_id');return false;";
    }
    
    public String collapsableDivInitialStyle() {
    	return "display:none;";
    }
    
    public String collapserALinkInitStyle() {
    	return "show";
    }
    
    
    
 }